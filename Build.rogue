# To run this build file, install Rogue from github.com/AbePralle/Rogue and type "rogo" at the command line.

#$ ROGUEC_ARGS = --api

module Build
global method_prefix = "Build::make_"

routine make_default
  make_compile
endRoutine

routine make_vim
  System.run @|mvim -p Source/VM/BossVM.rogue
endRoutine

routine make_compile
  if (File.is_newer_than("Source/VM/BossVM.rogue", "Build/Rogue/bossvm"))
    File.create_folder( "Build/Rogue" )
    local cmd = @|roguec Source/VM/BossVM.rogue --compile --output=Build/Rogue --debug
    println "> " + cmd
    if (0 != System.run(cmd)) return
  endIf
  local cmd = @|Build/Rogue/bossvm
  println "> " + cmd
  System.run cmd
endRoutine

routine make_clean
  System.run( "rm -rf .rogo" )
endRoutine

routine make_help
  println "USAGE"
  local lines = String[]
  forEach (m in <<Global>>.methods)
    if (m.name.begins_with(method_prefix))
      local line = "  rogo $" (m.name.after_first(method_prefix))
      line += " <$>" (m.parameter_name(forEach in 0..<m.parameter_count))
      lines.add( line )
    endIf
  endForEach
  lines.sort( (a,b)=>(a<b) )
  println (forEach in lines)
endRoutine


#------------------------------------------------------------------------------
# Process command line arguments and invoke appropriate function
#------------------------------------------------------------------------------
local args = @[]
args.add( forEach in System.command_line_arguments )

if (args.count)
  run( args.remove_first, args )
else
  make_default
endIf

routine run( cmd:String, args:Value )
  try
    local m = <<Global>>.find_method( method_prefix + cmd )
    if (m)
      if (m.parameter_count == 1 and args.count > 1)
        # Wrap all args in a ValueList.
        args = @[ args ]
      endIf
      m.call( Global, args )
    else
      make_help
    endIf
  catch (err:Error)
    make_help
  endTry
endRoutine

